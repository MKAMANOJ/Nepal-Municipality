apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.nepalmunicipality.badigadRuralMunicipality"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true //important

    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    splits {
        abi {
            enable true
            reset()
            include "x86", "armeabi-v7a", "armeabi", "mips", "x86_64", "arm64-v8a"
            universalApk false
        }
    }

}

// map for the version code that gives each ABI a value. make sure to list all ABIs mentioned
// in splits block, an keep the order.
ext.versionCodes = ['armeabi': 1, 'armeabi-v7a': 2, 'arm64-v8a': 3, mips: 4, 'x86': 5, 'x86_64': 6]
import com.android.build.OutputFile

// For each APK output variant, override versionCode with a combination of
// ABI APK value * 10000 + defaultConfig.versionCode
android.applicationVariants.all { variant ->
    // assign different version code for each output
    variant.outputs.each { output ->
        output.versionCodeOverride =
                project.ext.versionCodes.get(output.getFilter(OutputFile.ABI)) * 1000
        + android.defaultConfig.versionCode
    }
}

dependencies {
    implementation project(':base')

    implementation "com.google.firebase:firebase-database:$rootProject.ext.googleLibVersion"
    implementation "com.google.firebase:firebase-messaging:$rootProject.ext.googleLibVersion"
    implementation "com.google.firebase:firebase-config:$rootProject.ext.googleLibVersion"
}

apply plugin: 'com.google.gms.google-services'
